AWSTemplateFormatVersion:          2010-09-09
Description:                       >-
  Threat Buster Cloud Formation template, creates database and EB environment for app.
Parameters:
  DBUser:
    NoEcho:                        'true'
    Type:                          String
    Description:                   Test database admin account name
    MinLength:                     '1'
    MaxLength:                     '16'
    AllowedPattern:                '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription:         must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho:                        'true'
    Type:                          String
    Description:                   Test database admin account password
    MinLength:                     '8'
    MaxLength:                     '41'
    AllowedPattern:                '[a-zA-Z0-9]*'
    ConstraintDescription:         must contain only alphanumeric characters.
Mappings:
  Region2Principal:
    us-east-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    us-west-2:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    us-west-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    eu-west-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    eu-west-2:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ap-southeast-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ap-northeast-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ap-northeast-2:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ap-southeast-2:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ap-south-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    us-east-2:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ca-central-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    sa-east-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    cn-north-1:
      EC2Principal:                ec2.amazonaws.com.cn
      OpsWorksPrincipal:           opsworks.amazonaws.com.cn
    eu-central-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
Resources:
  EBServiceRole:
    Type:                          'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect:                Allow
            Principal:
              Service:
                - elasticbeanstalk.amazonaws.com
            Action:                sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId:    elasticbeanstalk
      Path:                        /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService
  WebServerRole:
    Type:                          'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect:                Allow
            Principal:
              Service:
                - !FindInMap
                  - Region2Principal
                  - !Ref 'AWS::Region'
                  - EC2Principal
            Action:
              - 'sts:AssumeRole'
      Path:                        /
  WebServerRolePolicy:
    Type:                          'AWS::IAM::Policy'
    Properties:
      PolicyName:                  WebServerRole
      PolicyDocument:
        Statement:
          - Effect:                Allow
            NotAction:             'iam:*'
            Resource:              '*'
      Roles:
        - !Ref WebServerRole
  WebServerInstanceProfile:
    Type:                          'AWS::IAM::InstanceProfile'
    Properties:
      Path:                        /
      Roles:
        - !Ref WebServerRole
  SampleApplication:
    Type:                          'AWS::ElasticBeanstalk::Application'
    Properties:
      Description:                 Threat-Buster
  SampleApplicationVersion:
    Type:                          'AWS::ElasticBeanstalk::ApplicationVersion'
    Properties:
      Description:                 Version 1.0
      ApplicationName:             !Ref SampleApplication
      SourceBundle:
        S3Bucket:                  !Join
          - '-'
          - - elasticbeanstalk-samples
            - !Ref 'AWS::Region'
        S3Key:                     docker-sample-v3.zip
  SampleConfigurationTemplate:
    Type:                          'AWS::ElasticBeanstalk::ConfigurationTemplate'
    Properties:
      ApplicationName:             !Ref SampleApplication
      Description:                 Threat-Buster Configuration 1.0
      SolutionStackName:           64bit Amazon Linux 2017.03 v2.7.2 running Docker 17.03.1-ce
      OptionSettings:
        - Namespace:               'aws:elasticbeanstalk:application:environment'
          OptionName:              RDS_USER_NAME
          Value:                   !Ref DBUser
        - Namespace:               'aws:elasticbeanstalk:application:environment'
          OptionName:              RDS_PASSWORD
          Value:                   !Ref DBPassword
        - Namespace:               'aws:elasticbeanstalk:application:environment'
          OptionName:              RDS_HOST
          Value:                   !GetAtt
            - SampleDB
            - Endpoint.Address
        - Namespace:               'aws:elasticbeanstalk:application:environment'
          OptionName:              RDS_PORT
          Value:                   !GetAtt
            - SampleDB
            - Endpoint.Port
        - Namespace:               'aws:autoscaling:launchconfiguration'
          OptionName:              SecurityGroups
          Value:                   !Ref InstanceSecurityGroup
        - Namespace:               'aws:autoscaling:launchconfiguration'
          OptionName:              IamInstanceProfile
          Value:                   !Ref WebServerInstanceProfile
        - Namespace:               'aws:elasticbeanstalk:environment'
          OptionName:              ServiceRole
          Value:                   !Ref EBServiceRole
  SampleEnvironment:
    Type:                          'AWS::ElasticBeanstalk::Environment'
    Properties:
      Description:                 AWS Elastic Beanstalk Environment running Sample Application
      ApplicationName:             !Ref SampleApplication
      TemplateName:                !Ref SampleConfigurationTemplate
      VersionLabel:                !Ref SampleApplicationVersion
  InstanceSecurityGroup:
    Type:                          'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription:            RDS allows ingress from EC2 instances in this group.
      SecurityGroupIngress:        []
  DBEC2SecurityGroup:
    Type:                          'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription:            Open database for access
      SecurityGroupIngress:
        - IpProtocol:              tcp
          FromPort:                '5432'
          ToPort:                  '5432'
          SourceSecurityGroupName: !Ref InstanceSecurityGroup
  SampleDB:
    Type:                          'AWS::RDS::DBInstance'
    Properties:
      Engine:                      Postgres
      DBName:                      beanstalkdb
      EngineVersion:               9.5.4
      MasterUsername:              !Ref DBUser
      DBInstanceClass:             db.t2.small
      AllocatedStorage:            '5'
      MasterUserPassword:          !Ref DBPassword
      VPCSecurityGroups:
        - !GetAtt
            - DBEC2SecurityGroup
            - GroupId
Outputs:
  URL:
    Description:                   URL of the AWS Elastic Beanstalk Environment
    Value:                         !Join
      - ''
      - - 'http://'
        - !GetAtt
          - SampleEnvironment
          - EndpointURL
  RDSEndpoint:
    Description:                   RDS Endpoint
    Value:                         !GetAtt
      - SampleDB
      - Endpoint.Address
