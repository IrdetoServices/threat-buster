AWSTemplateFormatVersion:          2010-09-09
Description:                       >-
  Threat Buster Cloud Formation template, creates database and EB environment for app.
Parameters:
  DBUser:
    NoEcho:                        'true'
    Type:                          String
    Description:                   Test database admin account name
    MinLength:                     '1'
    MaxLength:                     '16'
    AllowedPattern:                '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription:         must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho:                        'true'
    Type:                          String
    Description:                   Test database admin account password
    MinLength:                     '8'
    MaxLength:                     '41'
    AllowedPattern:                '[a-zA-Z0-9]*'
    ConstraintDescription:         must contain only alphanumeric characters.
  BaseName:
    Type: String
    Description: Base name for buckets
    MinLength: '1'
    AllowedPattern: '[a-zA-Z0-9-]*'
    ConstraintDescription: 'Only lowercase characters'
  DNSName:
    Type: String
    Description: DNS Name - will be added to DNS Zone
    Default: www
  DNSZone:
    Type: String
    Description: DNS Zone for env - must be in Route 53
    Default: threat-buster.com
  CertificateARN:
    Type: String
    Description: "The ARN of the certificate to use on the load balancer."
Mappings:
  Region2Principal:
    us-east-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    us-west-2:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    us-west-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    eu-west-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    eu-west-2:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ap-southeast-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ap-northeast-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ap-northeast-2:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ap-southeast-2:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ap-south-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    us-east-2:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    ca-central-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    sa-east-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
    cn-north-1:
      EC2Principal:                ec2.amazonaws.com.cn
      OpsWorksPrincipal:           opsworks.amazonaws.com.cn
    eu-central-1:
      EC2Principal:                ec2.amazonaws.com
      OpsWorksPrincipal:           opsworks.amazonaws.com
Resources:
  EBServiceRole:
    Type:                          'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect:                Allow
            Principal:
              Service:
                - elasticbeanstalk.amazonaws.com
            Action:                sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId:    elasticbeanstalk
      Path:                        /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService
  WebServerRole:
    Type:                          'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect:                Allow
            Principal:
              Service:
                - !FindInMap
                  - Region2Principal
                  - !Ref 'AWS::Region'
                  - EC2Principal
            Action:
              - 'sts:AssumeRole'
      Path:                        /
  WebServerRolePolicy:
    Type:                          'AWS::IAM::Policy'
    Properties:
      PolicyName:                  WebServerRole
      PolicyDocument:
        Statement:
          - Effect:                Allow
            NotAction:             'iam:*'
            Resource:              '*'
      Roles:
        - !Ref WebServerRole
  WebServerInstanceProfile:
    Type:                          'AWS::IAM::InstanceProfile'
    Properties:
      Path:                        /
      Roles:
        - !Ref WebServerRole
  ThreatBusterCName:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneName: !Join [ "", [ !Ref DNSZone, "." ]]
      Comment: "CName to elastic beanstalk"
      Name: !Join ["", [ !Ref DNSName, ".", !Ref DNSZone ]]
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !GetAtt ThreatBusterEnvironment.EndpointURL
  ThreatBusterApplication:
    Type:                          'AWS::ElasticBeanstalk::Application'
    Properties:
      Description:                 !Ref BaseName
  ThreatBusterApplicationVersion:
    Type:                          'AWS::ElasticBeanstalk::ApplicationVersion'
    Properties:
      Description:                 Version 1.0
      ApplicationName:             !Ref ThreatBusterApplication
      SourceBundle:
        S3Bucket:                  !Join
          - '-'
          - - elasticbeanstalk-samples
            - !Ref 'AWS::Region'
        S3Key:                     docker-sample-v3.zip
  ThreatBusterConfigurationTemplate:
    Type:                          'AWS::ElasticBeanstalk::ConfigurationTemplate'
    Properties:
      ApplicationName:             !Ref ThreatBusterApplication
      Description:                 !Join [ "", [!Ref BaseName, "Configuration 1.0"]]
      SolutionStackName:           64bit Amazon Linux 2017.03 v2.7.3 running Docker 17.03.1-ce
      OptionSettings:
        - Namespace:               'aws:elasticbeanstalk:application:environment'
          OptionName:              RDS_USERNAME
          Value:                   !Ref DBUser
        - Namespace:               'aws:elasticbeanstalk:application:environment'
          OptionName:              RDS_PASSWORD
          Value:                   !Ref DBPassword
        - Namespace:               'aws:elasticbeanstalk:application:environment'
          OptionName:              RDS_HOSTNAME
          Value:                   !GetAtt
            - "ThreatBusterDb"
            - Endpoint.Address
        - Namespace:               'aws:elasticbeanstalk:application:environment'
          OptionName:              CONFIG_BUCKET
          Value:                   !Ref ConfigS3Bucket
        - Namespace:               'aws:elasticbeanstalk:application:environment'
          OptionName:              STATIC_BUCKET
          Value:                   !Ref StaticS3Bucket
        - Namespace:               'aws:elasticbeanstalk:application:environment'
          OptionName:              RDS_PORT
          Value:                   !GetAtt
            - "ThreatBusterDb"
            - Endpoint.Port
        - Namespace:               'aws:autoscaling:launchconfiguration'
          OptionName:              SecurityGroups
          Value:                   !Ref InstanceSecurityGroup
        - Namespace:               'aws:autoscaling:launchconfiguration'
          OptionName:              IamInstanceProfile
          Value:                   !Ref WebServerInstanceProfile
        - Namespace:               'aws:elasticbeanstalk:environment'
          OptionName:              ServiceRole
          Value:                   !Ref EBServiceRole
        - Namespace:               'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: StreamLogs
          Value: true
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: RetentionInDays
          Value: 7
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: DeleteOnTerminate
          Value: true
        - Namespace: 'aws:elasticbeanstalk:environment:process:default'
          OptionName: StickinessEnabled
          Value: true
        - Namespace: 'aws:elasticbeanstalk:managedactions'
          OptionName: ManagedActionsEnabled
          Value: true
        - Namespace: 'aws:elasticbeanstalk:managedactions'
          OptionName: PreferredStartTime
          Value: Tue:10:00
        - Namespace: 'aws:elasticbeanstalk:managedactions:platformupdate'
          OptionName: UpdateLevel
          Value: patch
        - Namespace: 'aws:elasticbeanstalk:healthreporting:system'
          OptionName: SystemType
          Value: enhanced
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: classic
        - Namespace: aws:elb:listener
          OptionName: ListenerEnabled
          Value: false
        - Namespace: aws:elb:listener:443
          OptionName: InstancePort
          Value: 80
        - Namespace: aws:elb:listener:443
          OptionName: ListenerProtocol
          Value: HTTPS
        - Namespace: aws:elb:listener:443
          OptionName: InstanceProtocol
          Value: HTTP
        - Namespace: aws:elb:listener:443
          OptionName: PolicyNames
          Value: TLSHighPolicy
        - Namespace: aws:elb:policies
          OptionName: LoadBalancerPorts
          Value: :all
        - Namespace:  aws:elb:policies:TLSHighPolicy
          OptionName: SSLReferencePolicy
          Value:      ELBSecurityPolicy-TLS-1-2-2017-01
        - Namespace: aws:elb:listener:443
          OptionName: SSLCertificateId
          Value:  !Sub "${CertificateARN}"
  ThreatBusterEnvironment:
    Type:                          'AWS::ElasticBeanstalk::Environment'
    Properties:
      Description:                 AWS Elastic Beanstalk Environment running Sample Application
      ApplicationName:             !Ref ThreatBusterApplication
      TemplateName:                !Ref ThreatBusterConfigurationTemplate
      VersionLabel:                !Ref ThreatBusterApplicationVersion
  InstanceSecurityGroup:
    Type:                          'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription:            RDS allows ingress from EC2 instances in this group.
      SecurityGroupIngress:        []
  DBEC2SecurityGroup:
    Type:                          'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription:            Open database for access from EB
      SecurityGroupIngress:
        - IpProtocol:              tcp
          FromPort:                '5432'
          ToPort:                  '5432'
          SourceSecurityGroupName: !Ref InstanceSecurityGroup
  ThreatBusterDb:
    Type:                          'AWS::RDS::DBInstance'
    Properties:
      Engine:                      Postgres
      DBName:                      !Ref DBUser
      EngineVersion:               9.5.4
      MasterUsername:              !Ref DBUser
      DBInstanceClass:             db.t2.small
      AllocatedStorage:            '5'
      MasterUserPassword:          !Ref DBPassword
      VPCSecurityGroups:
        - !GetAtt
            - DBEC2SecurityGroup
            - GroupId
  ConfigS3Bucket:
        Type: "AWS::S3::Bucket"
        Properties:
          AccessControl: Private
  ConfigS3BucketPolicy:
      Type: "AWS::IAM::Policy"
      Properties:
        Roles:
          - !Ref EBServiceRole
        PolicyName: !Join ["", ["policy-config-read", !Ref ConfigS3Bucket ]]
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: Allow
              Action:
                  - "s3:*"
              Resource:
                  - !GetAtt ConfigS3Bucket.Arn
                  - !Join ["", [ !GetAtt ConfigS3Bucket.Arn, "/*"]]
  StaticS3Bucket:
      Type: "AWS::S3::Bucket"
      Properties:
        AccessControl: PublicRead
  StaticS3BucketPolicy:
      Type: "AWS::IAM::Policy"
      Properties:
        Roles:
          - !Ref EBServiceRole
        PolicyName: !Join ["", ["policy-static-all", !Ref StaticS3Bucket ]]
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: Allow
              Action:
                  - "s3:*"
              Resource:
                - !GetAtt StaticS3Bucket.Arn
                - !Join ["", [ !GetAtt StaticS3Bucket.Arn, "/*"]]

Outputs:
  URL:
    Description:                   URL of the AWS Elastic Beanstalk Environment
    Value:                         !Join
      - ''
      - - 'https://'
        - !GetAtt
          - "ThreatBusterEnvironment"
          - EndpointURL
  RDSEndpoint:
    Description:                   RDS Endpoint
    Value:                         !GetAtt
      - "ThreatBusterDb"
      - Endpoint.Address
  ConfigBucket:
    Description: Config Bucket
    Value: !Ref ConfigS3Bucket
  StaticBucket:
    Description: Static Bucket
    Value: !Ref StaticS3Bucket
